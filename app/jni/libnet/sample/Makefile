# Makefile.in generated by automake 1.10 from Makefile.am.
# sample/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# $Id: Makefile.am,v 1.6 2004/11/09 07:05:07 mike Exp $
#
# Libnet automake information file
# Copyright (c) 1998 - 2004 Mike D. Schiffman <mike@infonexus.com>
# All rights reserved.
#
# Process this file with automake to produce a Makefile.in script.

# $Id: Makefile.am.common,v 1.3 2004/01/03 20:31:00 mike Exp $
#
# Libnet automake information file
# Copyright (c) 1998 - 2004 Mike D. Schiffman <mike@infonexus.com>
# All rights reserved.
#


pkgdatadir = $(datadir)/libnet
pkglibdir = $(libdir)/libnet
pkgincludedir = $(includedir)/libnet
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = arm-unknown-linux-androideabi
target_triplet = arm-unknown-linux-androideabi
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.am.common
#bin_PROGRAMS = $(am__EXEEXT_1)
noinst_PROGRAMS = $(am__EXEEXT_1)
subdir = sample
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
am__EXEEXT_1 = arp$(EXEEXT) cdp$(EXEEXT) dhcp_discover$(EXEEXT) \
	get_addr$(EXEEXT) icmp_timestamp$(EXEEXT) \
	icmp_unreach$(EXEEXT) ieee$(EXEEXT) isl$(EXEEXT) ntp$(EXEEXT) \
	ospf_hello$(EXEEXT) ospf_lsa$(EXEEXT) ping_of_death$(EXEEXT) \
	stp$(EXEEXT) synflood$(EXEEXT) tcp1$(EXEEXT) tcp2$(EXEEXT) \
	udp1$(EXEEXT) udp2$(EXEEXT) synflood6$(EXEEXT) \
	icmp6_echoreq$(EXEEXT) icmp6_unreach$(EXEEXT) \
	icmp_echo_cq$(EXEEXT) smurf$(EXEEXT) dot1x$(EXEEXT) \
	dns$(EXEEXT) rpc_tcp$(EXEEXT) rpc_udp$(EXEEXT) mpls$(EXEEXT) \
	icmp_timeexceed$(EXEEXT) fddi_tcp1$(EXEEXT) fddi_tcp2$(EXEEXT) \
	tring_tcp1$(EXEEXT) tring_tcp2$(EXEEXT) icmp_redirect$(EXEEXT) \
	bgp4_hdr$(EXEEXT) bgp4_open$(EXEEXT) bgp4_update$(EXEEXT) \
	bgp4_notification$(EXEEXT) gre$(EXEEXT) \
	synflood6_frag$(EXEEXT) tftp$(EXEEXT) ip_link$(EXEEXT) \
	ip_raw$(EXEEXT) sebek$(EXEEXT) hsrp$(EXEEXT) \
	test_ipv4$(EXEEXT) test_ipv6_icmpv4$(EXEEXT) \
	test_ipv4_options$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_arp_OBJECTS = arp.$(OBJEXT)
arp_OBJECTS = $(am_arp_OBJECTS)
arp_LDADD = $(LDADD)
arp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_bgp4_hdr_OBJECTS = bgp4_hdr.$(OBJEXT)
bgp4_hdr_OBJECTS = $(am_bgp4_hdr_OBJECTS)
bgp4_hdr_LDADD = $(LDADD)
bgp4_hdr_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_bgp4_notification_OBJECTS = bgp4_notification.$(OBJEXT)
bgp4_notification_OBJECTS = $(am_bgp4_notification_OBJECTS)
bgp4_notification_LDADD = $(LDADD)
bgp4_notification_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_bgp4_open_OBJECTS = bgp4_open.$(OBJEXT)
bgp4_open_OBJECTS = $(am_bgp4_open_OBJECTS)
bgp4_open_LDADD = $(LDADD)
bgp4_open_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_bgp4_update_OBJECTS = bgp4_update.$(OBJEXT)
bgp4_update_OBJECTS = $(am_bgp4_update_OBJECTS)
bgp4_update_LDADD = $(LDADD)
bgp4_update_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_cdp_OBJECTS = cdp.$(OBJEXT)
cdp_OBJECTS = $(am_cdp_OBJECTS)
cdp_LDADD = $(LDADD)
cdp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_dhcp_discover_OBJECTS = dhcp_discover.$(OBJEXT)
dhcp_discover_OBJECTS = $(am_dhcp_discover_OBJECTS)
dhcp_discover_LDADD = $(LDADD)
dhcp_discover_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_dns_OBJECTS = dns.$(OBJEXT)
dns_OBJECTS = $(am_dns_OBJECTS)
dns_LDADD = $(LDADD)
dns_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_dot1x_OBJECTS = dot1x.$(OBJEXT)
dot1x_OBJECTS = $(am_dot1x_OBJECTS)
dot1x_LDADD = $(LDADD)
dot1x_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_fddi_tcp1_OBJECTS = fddi_tcp1.$(OBJEXT)
fddi_tcp1_OBJECTS = $(am_fddi_tcp1_OBJECTS)
fddi_tcp1_LDADD = $(LDADD)
fddi_tcp1_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_fddi_tcp2_OBJECTS = fddi_tcp2.$(OBJEXT)
fddi_tcp2_OBJECTS = $(am_fddi_tcp2_OBJECTS)
fddi_tcp2_LDADD = $(LDADD)
fddi_tcp2_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_get_addr_OBJECTS = get_addr.$(OBJEXT)
get_addr_OBJECTS = $(am_get_addr_OBJECTS)
get_addr_LDADD = $(LDADD)
get_addr_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_gre_OBJECTS = gre.$(OBJEXT)
gre_OBJECTS = $(am_gre_OBJECTS)
gre_LDADD = $(LDADD)
gre_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_hsrp_OBJECTS = hsrp.$(OBJEXT)
hsrp_OBJECTS = $(am_hsrp_OBJECTS)
hsrp_LDADD = $(LDADD)
hsrp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_icmp6_echoreq_OBJECTS = icmp6_echoreq.$(OBJEXT)
icmp6_echoreq_OBJECTS = $(am_icmp6_echoreq_OBJECTS)
icmp6_echoreq_LDADD = $(LDADD)
icmp6_echoreq_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_icmp6_unreach_OBJECTS = icmp6_unreach.$(OBJEXT)
icmp6_unreach_OBJECTS = $(am_icmp6_unreach_OBJECTS)
icmp6_unreach_LDADD = $(LDADD)
icmp6_unreach_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_icmp_echo_cq_OBJECTS = icmp_echo_cq.$(OBJEXT)
icmp_echo_cq_OBJECTS = $(am_icmp_echo_cq_OBJECTS)
icmp_echo_cq_LDADD = $(LDADD)
icmp_echo_cq_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_icmp_redirect_OBJECTS = icmp_redirect.$(OBJEXT)
icmp_redirect_OBJECTS = $(am_icmp_redirect_OBJECTS)
icmp_redirect_LDADD = $(LDADD)
icmp_redirect_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_icmp_timeexceed_OBJECTS = icmp_timeexceed.$(OBJEXT)
icmp_timeexceed_OBJECTS = $(am_icmp_timeexceed_OBJECTS)
icmp_timeexceed_LDADD = $(LDADD)
icmp_timeexceed_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_icmp_timestamp_OBJECTS = icmp_timestamp.$(OBJEXT)
icmp_timestamp_OBJECTS = $(am_icmp_timestamp_OBJECTS)
icmp_timestamp_LDADD = $(LDADD)
icmp_timestamp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_icmp_unreach_OBJECTS = icmp_unreach.$(OBJEXT)
icmp_unreach_OBJECTS = $(am_icmp_unreach_OBJECTS)
icmp_unreach_LDADD = $(LDADD)
icmp_unreach_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_ieee_OBJECTS = ieee.$(OBJEXT)
ieee_OBJECTS = $(am_ieee_OBJECTS)
ieee_LDADD = $(LDADD)
ieee_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_ip_link_OBJECTS = ip_link.$(OBJEXT)
ip_link_OBJECTS = $(am_ip_link_OBJECTS)
ip_link_LDADD = $(LDADD)
ip_link_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_ip_raw_OBJECTS = ip_raw.$(OBJEXT)
ip_raw_OBJECTS = $(am_ip_raw_OBJECTS)
ip_raw_LDADD = $(LDADD)
ip_raw_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_isl_OBJECTS = isl.$(OBJEXT)
isl_OBJECTS = $(am_isl_OBJECTS)
isl_LDADD = $(LDADD)
isl_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_mpls_OBJECTS = mpls.$(OBJEXT)
mpls_OBJECTS = $(am_mpls_OBJECTS)
mpls_LDADD = $(LDADD)
mpls_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_ntp_OBJECTS = ntp.$(OBJEXT)
ntp_OBJECTS = $(am_ntp_OBJECTS)
ntp_LDADD = $(LDADD)
ntp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_ospf_hello_OBJECTS = ospf_hello.$(OBJEXT)
ospf_hello_OBJECTS = $(am_ospf_hello_OBJECTS)
ospf_hello_LDADD = $(LDADD)
ospf_hello_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_ospf_lsa_OBJECTS = ospf_lsa.$(OBJEXT)
ospf_lsa_OBJECTS = $(am_ospf_lsa_OBJECTS)
ospf_lsa_LDADD = $(LDADD)
ospf_lsa_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_ping_of_death_OBJECTS = ping_of_death.$(OBJEXT)
ping_of_death_OBJECTS = $(am_ping_of_death_OBJECTS)
ping_of_death_LDADD = $(LDADD)
ping_of_death_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_rpc_tcp_OBJECTS = rpc_tcp.$(OBJEXT)
rpc_tcp_OBJECTS = $(am_rpc_tcp_OBJECTS)
rpc_tcp_LDADD = $(LDADD)
rpc_tcp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_rpc_udp_OBJECTS = rpc_udp.$(OBJEXT)
rpc_udp_OBJECTS = $(am_rpc_udp_OBJECTS)
rpc_udp_LDADD = $(LDADD)
rpc_udp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_sebek_OBJECTS = sebek.$(OBJEXT)
sebek_OBJECTS = $(am_sebek_OBJECTS)
sebek_LDADD = $(LDADD)
sebek_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_smurf_OBJECTS = smurf.$(OBJEXT)
smurf_OBJECTS = $(am_smurf_OBJECTS)
smurf_LDADD = $(LDADD)
smurf_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_stp_OBJECTS = stp.$(OBJEXT)
stp_OBJECTS = $(am_stp_OBJECTS)
stp_LDADD = $(LDADD)
stp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_synflood_OBJECTS = synflood.$(OBJEXT)
synflood_OBJECTS = $(am_synflood_OBJECTS)
synflood_LDADD = $(LDADD)
synflood_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_synflood6_OBJECTS = synflood6.$(OBJEXT)
synflood6_OBJECTS = $(am_synflood6_OBJECTS)
synflood6_LDADD = $(LDADD)
synflood6_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_synflood6_frag_OBJECTS = synflood6_frag.$(OBJEXT)
synflood6_frag_OBJECTS = $(am_synflood6_frag_OBJECTS)
synflood6_frag_LDADD = $(LDADD)
synflood6_frag_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_tcp1_OBJECTS = tcp1.$(OBJEXT)
tcp1_OBJECTS = $(am_tcp1_OBJECTS)
tcp1_LDADD = $(LDADD)
tcp1_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_tcp2_OBJECTS = tcp2.$(OBJEXT)
tcp2_OBJECTS = $(am_tcp2_OBJECTS)
tcp2_LDADD = $(LDADD)
tcp2_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_test_ipv4_OBJECTS = test_ipv4.$(OBJEXT)
test_ipv4_OBJECTS = $(am_test_ipv4_OBJECTS)
test_ipv4_LDADD = $(LDADD)
test_ipv4_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_test_ipv4_options_OBJECTS = test_ipv4_options.$(OBJEXT)
test_ipv4_options_OBJECTS = $(am_test_ipv4_options_OBJECTS)
test_ipv4_options_LDADD = $(LDADD)
test_ipv4_options_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_test_ipv6_icmpv4_OBJECTS = test_ipv6_icmpv4.$(OBJEXT)
test_ipv6_icmpv4_OBJECTS = $(am_test_ipv6_icmpv4_OBJECTS)
test_ipv6_icmpv4_LDADD = $(LDADD)
test_ipv6_icmpv4_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_tftp_OBJECTS = tftp.$(OBJEXT)
tftp_OBJECTS = $(am_tftp_OBJECTS)
tftp_LDADD = $(LDADD)
tftp_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_tring_tcp1_OBJECTS = tring_tcp1.$(OBJEXT)
tring_tcp1_OBJECTS = $(am_tring_tcp1_OBJECTS)
tring_tcp1_LDADD = $(LDADD)
tring_tcp1_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_tring_tcp2_OBJECTS = tring_tcp2.$(OBJEXT)
tring_tcp2_OBJECTS = $(am_tring_tcp2_OBJECTS)
tring_tcp2_LDADD = $(LDADD)
tring_tcp2_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_udp1_OBJECTS = udp1.$(OBJEXT)
udp1_OBJECTS = $(am_udp1_OBJECTS)
udp1_LDADD = $(LDADD)
udp1_DEPENDENCIES = $(top_builddir)/src/libnet.la
am_udp2_OBJECTS = udp2.$(OBJEXT)
udp2_OBJECTS = $(am_udp2_OBJECTS)
udp2_LDADD = $(LDADD)
udp2_DEPENDENCIES = $(top_builddir)/src/libnet.la
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(arp_SOURCES) $(bgp4_hdr_SOURCES) \
	$(bgp4_notification_SOURCES) $(bgp4_open_SOURCES) \
	$(bgp4_update_SOURCES) $(cdp_SOURCES) $(dhcp_discover_SOURCES) \
	$(dns_SOURCES) $(dot1x_SOURCES) $(fddi_tcp1_SOURCES) \
	$(fddi_tcp2_SOURCES) $(get_addr_SOURCES) $(gre_SOURCES) \
	$(hsrp_SOURCES) $(icmp6_echoreq_SOURCES) \
	$(icmp6_unreach_SOURCES) $(icmp_echo_cq_SOURCES) \
	$(icmp_redirect_SOURCES) $(icmp_timeexceed_SOURCES) \
	$(icmp_timestamp_SOURCES) $(icmp_unreach_SOURCES) \
	$(ieee_SOURCES) $(ip_link_SOURCES) $(ip_raw_SOURCES) \
	$(isl_SOURCES) $(mpls_SOURCES) $(ntp_SOURCES) \
	$(ospf_hello_SOURCES) $(ospf_lsa_SOURCES) \
	$(ping_of_death_SOURCES) $(rpc_tcp_SOURCES) $(rpc_udp_SOURCES) \
	$(sebek_SOURCES) $(smurf_SOURCES) $(stp_SOURCES) \
	$(synflood_SOURCES) $(synflood6_SOURCES) \
	$(synflood6_frag_SOURCES) $(tcp1_SOURCES) $(tcp2_SOURCES) \
	$(test_ipv4_SOURCES) $(test_ipv4_options_SOURCES) \
	$(test_ipv6_icmpv4_SOURCES) $(tftp_SOURCES) \
	$(tring_tcp1_SOURCES) $(tring_tcp2_SOURCES) $(udp1_SOURCES) \
	$(udp2_SOURCES)
DIST_SOURCES = $(arp_SOURCES) $(bgp4_hdr_SOURCES) \
	$(bgp4_notification_SOURCES) $(bgp4_open_SOURCES) \
	$(bgp4_update_SOURCES) $(cdp_SOURCES) $(dhcp_discover_SOURCES) \
	$(dns_SOURCES) $(dot1x_SOURCES) $(fddi_tcp1_SOURCES) \
	$(fddi_tcp2_SOURCES) $(get_addr_SOURCES) $(gre_SOURCES) \
	$(hsrp_SOURCES) $(icmp6_echoreq_SOURCES) \
	$(icmp6_unreach_SOURCES) $(icmp_echo_cq_SOURCES) \
	$(icmp_redirect_SOURCES) $(icmp_timeexceed_SOURCES) \
	$(icmp_timestamp_SOURCES) $(icmp_unreach_SOURCES) \
	$(ieee_SOURCES) $(ip_link_SOURCES) $(ip_raw_SOURCES) \
	$(isl_SOURCES) $(mpls_SOURCES) $(ntp_SOURCES) \
	$(ospf_hello_SOURCES) $(ospf_lsa_SOURCES) \
	$(ping_of_death_SOURCES) $(rpc_tcp_SOURCES) $(rpc_udp_SOURCES) \
	$(sebek_SOURCES) $(smurf_SOURCES) $(stp_SOURCES) \
	$(synflood_SOURCES) $(synflood6_SOURCES) \
	$(synflood6_frag_SOURCES) $(tcp1_SOURCES) $(tcp2_SOURCES) \
	$(test_ipv4_SOURCES) $(test_ipv4_options_SOURCES) \
	$(test_ipv6_icmpv4_SOURCES) $(tftp_SOURCES) \
	$(tring_tcp1_SOURCES) $(tring_tcp2_SOURCES) $(udp1_SOURCES) \
	$(udp2_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/robquad/dev/android/ndk/arpspoof/jni/libnet/missing --run aclocal-1.10
ADDITIONAL_LIBS = 
AMTAR = ${SHELL} /home/robquad/dev/android/ndk/arpspoof/jni/libnet/missing --run tar
AR = arm-linux-androideabi-ar
AUTOCONF = ${SHELL} /home/robquad/dev/android/ndk/arpspoof/jni/libnet/missing --run autoconf
AUTOHEADER = ${SHELL} /home/robquad/dev/android/ndk/arpspoof/jni/libnet/missing --run autoheader
AUTOMAKE = ${SHELL} /home/robquad/dev/android/ndk/arpspoof/jni/libnet/missing --run automake-1.10
AWK = gawk
CC = arm-linux-androideabi-gcc
CCDEPMODE = depmode=none
CFLAGS = -mthumb -I/home/robquad/dev/android/ndk/build/platforms/android-8/arch-arm/usr/include/ -I../include/ -I../../include
CPP = arm-linux-androideabi-gcc -E
CPPFLAGS = 
CXX = arm-linux-androideabi-g++
CXXCPP = arm-linux-androideabi-g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENDIANESS = LIBNET_LIL_ENDIAN
EXEEXT = 
F77 = 
FFLAGS = 
GREP = /bin/grep
HAVE_PACKET_SOCKET = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = -Wl,--fix-cortex-a8,-rpath-link=/home/robquad/dev/android/ndk/build/platforms/android-8/arch-arm/usr/lib/ -L/home/robquad/dev/android/ndk/build/platforms/android-8/arch-arm/usr/lib/
LIBNET_CONFIG_CFLAGS = 
LIBNET_CONFIG_DEFINES = -D_BSD_SOURCE -D__BSD_SOURCE -D__FAVOR_BSD
LIBNET_CONFIG_LIBS = 
LIBOBJS =  ${LIBOBJDIR}libnet_link_linux$U.o
LIBS = -lc
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS =  ${LIBOBJDIR}libnet_link_linux$U.lo
MAINT = #
MAKEINFO = ${SHELL} /home/robquad/dev/android/ndk/arpspoof/jni/libnet/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = libnet
PACKAGE_BUGREPORT = 
PACKAGE_NAME = libnet
PACKAGE_STRING = libnet 1.1.5
PACKAGE_TARNAME = libnet
PACKAGE_VERSION = 1.1.5
PATH_SEPARATOR = :
RANLIB = arm-linux-androideabi-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = arm-linux-androideabi-strip
VERSION = 1.1.5
abs_builddir = /home/robquad/dev/android/ndk/arpspoof/jni/libnet/sample
abs_srcdir = /home/robquad/dev/android/ndk/arpspoof/jni/libnet/sample
abs_top_builddir = /home/robquad/dev/android/ndk/arpspoof/jni/libnet
abs_top_srcdir = /home/robquad/dev/android/ndk/arpspoof/jni/libnet
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-unknown-linux-androideabi
host_alias = arm-linux-androideabi
host_cpu = arm
host_os = linux-androideabi
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/robquad/dev/android/ndk/arpspoof/jni/libnet/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = arm-unknown-linux-androideabi
target_alias = 
target_cpu = arm
target_os = linux-androideabi
target_vendor = unknown
top_builddir = ..
top_srcdir = ..
AUTOMAKE_OPTIONS = foreign no-dependencies
DISTCLEANFILES = *~
ACLOCAL_AMFLAGS = -I m4
INCLUDES = -I$(top_srcdir)/include
samples = arp cdp dhcp_discover get_addr icmp_timestamp icmp_unreach \
                  ieee isl ntp ospf_hello ospf_lsa ping_of_death stp synflood \
                  tcp1 tcp2 udp1 udp2 synflood6 \
                  icmp6_echoreq \
                  icmp6_unreach \
                  icmp_echo_cq \
                  smurf dot1x dns rpc_tcp rpc_udp mpls icmp_timeexceed \
                  fddi_tcp1 fddi_tcp2 tring_tcp1 tring_tcp2 icmp_redirect \
                  bgp4_hdr bgp4_open bgp4_update bgp4_notification gre \
                  synflood6_frag tftp ip_link ip_raw sebek hsrp \
                  test_ipv4 test_ipv6_icmpv4 test_ipv4_options

arp_SOURCES = arp.c
cdp_SOURCES = cdp.c
dot1x_SOURCES = dot1x.c
dhcp_discover_SOURCES = dhcp_discover.c
dns_SOURCES = dns.c
fddi_tcp1_SOURCES = fddi_tcp1.c
fddi_tcp2_SOURCES = fddi_tcp2.c
tring_tcp1_SOURCES = tring_tcp1.c
tring_tcp2_SOURCES = tring_tcp2.c
get_addr_SOURCES = get_addr.c
icmp_echo_cq_SOURCES = icmp_echo_cq.c
icmp_redirect_SOURCES = icmp_redirect.c
icmp_timestamp_SOURCES = icmp_timestamp.c
icmp_timeexceed_SOURCES = icmp_timeexceed.c
icmp_unreach_SOURCES = icmp_unreach.c
ieee_SOURCES = ieee.c
isl_SOURCES = isl.c
ntp_SOURCES = ntp.c
ospf_hello_SOURCES = ospf_hello.c
ospf_lsa_SOURCES = ospf_lsa.c
ping_of_death_SOURCES = ping_of_death.c
mpls_SOURCES = mpls.c
rpc_tcp_SOURCES = rpc_tcp.c
rpc_udp_SOURCES = rpc_udp.c
stp_SOURCES = stp.c
synflood_SOURCES = synflood.c
tcp1_SOURCES = tcp1.c
tcp2_SOURCES = tcp2.c
tftp_SOURCES = tftp.c
udp1_SOURCES = udp1.c
udp2_SOURCES = udp2.c
icmp6_echoreq_SOURCES = icmp6_echoreq.c
icmp6_unreach_SOURCES = icmp6_unreach.c
smurf_SOURCES = smurf.c
synflood6_SOURCES = synflood6.c
synflood6_frag_SOURCES = synflood6_frag.c
bgp4_hdr_SOURCES = bgp4_hdr.c
bgp4_open_SOURCES = bgp4_open.c
bgp4_update_SOURCES = bgp4_update.c
bgp4_notification_SOURCES = bgp4_notification.c
gre_SOURCES = gre.c
ip_raw_SOURCES = ip_raw.c
ip_link_SOURCES = ip_link.c
sebek_SOURCES = sebek.c
hsrp_SOURCES = hsrp.c
test_ipv4_SOURCES = test_ipv4.c
test_ipv4_options_SOURCES = test_ipv4_options.c
test_ipv6_icmpv4_SOURCES = test_ipv6_icmpv4.c
EXTRA_DIST = libnet_test.h
LDADD = $(top_builddir)/src/libnet.la
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.am.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  sample/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  sample/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
arp$(EXEEXT): $(arp_OBJECTS) $(arp_DEPENDENCIES) 
	@rm -f arp$(EXEEXT)
	$(LINK) $(arp_OBJECTS) $(arp_LDADD) $(LIBS)
bgp4_hdr$(EXEEXT): $(bgp4_hdr_OBJECTS) $(bgp4_hdr_DEPENDENCIES) 
	@rm -f bgp4_hdr$(EXEEXT)
	$(LINK) $(bgp4_hdr_OBJECTS) $(bgp4_hdr_LDADD) $(LIBS)
bgp4_notification$(EXEEXT): $(bgp4_notification_OBJECTS) $(bgp4_notification_DEPENDENCIES) 
	@rm -f bgp4_notification$(EXEEXT)
	$(LINK) $(bgp4_notification_OBJECTS) $(bgp4_notification_LDADD) $(LIBS)
bgp4_open$(EXEEXT): $(bgp4_open_OBJECTS) $(bgp4_open_DEPENDENCIES) 
	@rm -f bgp4_open$(EXEEXT)
	$(LINK) $(bgp4_open_OBJECTS) $(bgp4_open_LDADD) $(LIBS)
bgp4_update$(EXEEXT): $(bgp4_update_OBJECTS) $(bgp4_update_DEPENDENCIES) 
	@rm -f bgp4_update$(EXEEXT)
	$(LINK) $(bgp4_update_OBJECTS) $(bgp4_update_LDADD) $(LIBS)
cdp$(EXEEXT): $(cdp_OBJECTS) $(cdp_DEPENDENCIES) 
	@rm -f cdp$(EXEEXT)
	$(LINK) $(cdp_OBJECTS) $(cdp_LDADD) $(LIBS)
dhcp_discover$(EXEEXT): $(dhcp_discover_OBJECTS) $(dhcp_discover_DEPENDENCIES) 
	@rm -f dhcp_discover$(EXEEXT)
	$(LINK) $(dhcp_discover_OBJECTS) $(dhcp_discover_LDADD) $(LIBS)
dns$(EXEEXT): $(dns_OBJECTS) $(dns_DEPENDENCIES) 
	@rm -f dns$(EXEEXT)
	$(LINK) $(dns_OBJECTS) $(dns_LDADD) $(LIBS)
dot1x$(EXEEXT): $(dot1x_OBJECTS) $(dot1x_DEPENDENCIES) 
	@rm -f dot1x$(EXEEXT)
	$(LINK) $(dot1x_OBJECTS) $(dot1x_LDADD) $(LIBS)
fddi_tcp1$(EXEEXT): $(fddi_tcp1_OBJECTS) $(fddi_tcp1_DEPENDENCIES) 
	@rm -f fddi_tcp1$(EXEEXT)
	$(LINK) $(fddi_tcp1_OBJECTS) $(fddi_tcp1_LDADD) $(LIBS)
fddi_tcp2$(EXEEXT): $(fddi_tcp2_OBJECTS) $(fddi_tcp2_DEPENDENCIES) 
	@rm -f fddi_tcp2$(EXEEXT)
	$(LINK) $(fddi_tcp2_OBJECTS) $(fddi_tcp2_LDADD) $(LIBS)
get_addr$(EXEEXT): $(get_addr_OBJECTS) $(get_addr_DEPENDENCIES) 
	@rm -f get_addr$(EXEEXT)
	$(LINK) $(get_addr_OBJECTS) $(get_addr_LDADD) $(LIBS)
gre$(EXEEXT): $(gre_OBJECTS) $(gre_DEPENDENCIES) 
	@rm -f gre$(EXEEXT)
	$(LINK) $(gre_OBJECTS) $(gre_LDADD) $(LIBS)
hsrp$(EXEEXT): $(hsrp_OBJECTS) $(hsrp_DEPENDENCIES) 
	@rm -f hsrp$(EXEEXT)
	$(LINK) $(hsrp_OBJECTS) $(hsrp_LDADD) $(LIBS)
icmp6_echoreq$(EXEEXT): $(icmp6_echoreq_OBJECTS) $(icmp6_echoreq_DEPENDENCIES) 
	@rm -f icmp6_echoreq$(EXEEXT)
	$(LINK) $(icmp6_echoreq_OBJECTS) $(icmp6_echoreq_LDADD) $(LIBS)
icmp6_unreach$(EXEEXT): $(icmp6_unreach_OBJECTS) $(icmp6_unreach_DEPENDENCIES) 
	@rm -f icmp6_unreach$(EXEEXT)
	$(LINK) $(icmp6_unreach_OBJECTS) $(icmp6_unreach_LDADD) $(LIBS)
icmp_echo_cq$(EXEEXT): $(icmp_echo_cq_OBJECTS) $(icmp_echo_cq_DEPENDENCIES) 
	@rm -f icmp_echo_cq$(EXEEXT)
	$(LINK) $(icmp_echo_cq_OBJECTS) $(icmp_echo_cq_LDADD) $(LIBS)
icmp_redirect$(EXEEXT): $(icmp_redirect_OBJECTS) $(icmp_redirect_DEPENDENCIES) 
	@rm -f icmp_redirect$(EXEEXT)
	$(LINK) $(icmp_redirect_OBJECTS) $(icmp_redirect_LDADD) $(LIBS)
icmp_timeexceed$(EXEEXT): $(icmp_timeexceed_OBJECTS) $(icmp_timeexceed_DEPENDENCIES) 
	@rm -f icmp_timeexceed$(EXEEXT)
	$(LINK) $(icmp_timeexceed_OBJECTS) $(icmp_timeexceed_LDADD) $(LIBS)
icmp_timestamp$(EXEEXT): $(icmp_timestamp_OBJECTS) $(icmp_timestamp_DEPENDENCIES) 
	@rm -f icmp_timestamp$(EXEEXT)
	$(LINK) $(icmp_timestamp_OBJECTS) $(icmp_timestamp_LDADD) $(LIBS)
icmp_unreach$(EXEEXT): $(icmp_unreach_OBJECTS) $(icmp_unreach_DEPENDENCIES) 
	@rm -f icmp_unreach$(EXEEXT)
	$(LINK) $(icmp_unreach_OBJECTS) $(icmp_unreach_LDADD) $(LIBS)
ieee$(EXEEXT): $(ieee_OBJECTS) $(ieee_DEPENDENCIES) 
	@rm -f ieee$(EXEEXT)
	$(LINK) $(ieee_OBJECTS) $(ieee_LDADD) $(LIBS)
ip_link$(EXEEXT): $(ip_link_OBJECTS) $(ip_link_DEPENDENCIES) 
	@rm -f ip_link$(EXEEXT)
	$(LINK) $(ip_link_OBJECTS) $(ip_link_LDADD) $(LIBS)
ip_raw$(EXEEXT): $(ip_raw_OBJECTS) $(ip_raw_DEPENDENCIES) 
	@rm -f ip_raw$(EXEEXT)
	$(LINK) $(ip_raw_OBJECTS) $(ip_raw_LDADD) $(LIBS)
isl$(EXEEXT): $(isl_OBJECTS) $(isl_DEPENDENCIES) 
	@rm -f isl$(EXEEXT)
	$(LINK) $(isl_OBJECTS) $(isl_LDADD) $(LIBS)
mpls$(EXEEXT): $(mpls_OBJECTS) $(mpls_DEPENDENCIES) 
	@rm -f mpls$(EXEEXT)
	$(LINK) $(mpls_OBJECTS) $(mpls_LDADD) $(LIBS)
ntp$(EXEEXT): $(ntp_OBJECTS) $(ntp_DEPENDENCIES) 
	@rm -f ntp$(EXEEXT)
	$(LINK) $(ntp_OBJECTS) $(ntp_LDADD) $(LIBS)
ospf_hello$(EXEEXT): $(ospf_hello_OBJECTS) $(ospf_hello_DEPENDENCIES) 
	@rm -f ospf_hello$(EXEEXT)
	$(LINK) $(ospf_hello_OBJECTS) $(ospf_hello_LDADD) $(LIBS)
ospf_lsa$(EXEEXT): $(ospf_lsa_OBJECTS) $(ospf_lsa_DEPENDENCIES) 
	@rm -f ospf_lsa$(EXEEXT)
	$(LINK) $(ospf_lsa_OBJECTS) $(ospf_lsa_LDADD) $(LIBS)
ping_of_death$(EXEEXT): $(ping_of_death_OBJECTS) $(ping_of_death_DEPENDENCIES) 
	@rm -f ping_of_death$(EXEEXT)
	$(LINK) $(ping_of_death_OBJECTS) $(ping_of_death_LDADD) $(LIBS)
rpc_tcp$(EXEEXT): $(rpc_tcp_OBJECTS) $(rpc_tcp_DEPENDENCIES) 
	@rm -f rpc_tcp$(EXEEXT)
	$(LINK) $(rpc_tcp_OBJECTS) $(rpc_tcp_LDADD) $(LIBS)
rpc_udp$(EXEEXT): $(rpc_udp_OBJECTS) $(rpc_udp_DEPENDENCIES) 
	@rm -f rpc_udp$(EXEEXT)
	$(LINK) $(rpc_udp_OBJECTS) $(rpc_udp_LDADD) $(LIBS)
sebek$(EXEEXT): $(sebek_OBJECTS) $(sebek_DEPENDENCIES) 
	@rm -f sebek$(EXEEXT)
	$(LINK) $(sebek_OBJECTS) $(sebek_LDADD) $(LIBS)
smurf$(EXEEXT): $(smurf_OBJECTS) $(smurf_DEPENDENCIES) 
	@rm -f smurf$(EXEEXT)
	$(LINK) $(smurf_OBJECTS) $(smurf_LDADD) $(LIBS)
stp$(EXEEXT): $(stp_OBJECTS) $(stp_DEPENDENCIES) 
	@rm -f stp$(EXEEXT)
	$(LINK) $(stp_OBJECTS) $(stp_LDADD) $(LIBS)
synflood$(EXEEXT): $(synflood_OBJECTS) $(synflood_DEPENDENCIES) 
	@rm -f synflood$(EXEEXT)
	$(LINK) $(synflood_OBJECTS) $(synflood_LDADD) $(LIBS)
synflood6$(EXEEXT): $(synflood6_OBJECTS) $(synflood6_DEPENDENCIES) 
	@rm -f synflood6$(EXEEXT)
	$(LINK) $(synflood6_OBJECTS) $(synflood6_LDADD) $(LIBS)
synflood6_frag$(EXEEXT): $(synflood6_frag_OBJECTS) $(synflood6_frag_DEPENDENCIES) 
	@rm -f synflood6_frag$(EXEEXT)
	$(LINK) $(synflood6_frag_OBJECTS) $(synflood6_frag_LDADD) $(LIBS)
tcp1$(EXEEXT): $(tcp1_OBJECTS) $(tcp1_DEPENDENCIES) 
	@rm -f tcp1$(EXEEXT)
	$(LINK) $(tcp1_OBJECTS) $(tcp1_LDADD) $(LIBS)
tcp2$(EXEEXT): $(tcp2_OBJECTS) $(tcp2_DEPENDENCIES) 
	@rm -f tcp2$(EXEEXT)
	$(LINK) $(tcp2_OBJECTS) $(tcp2_LDADD) $(LIBS)
test_ipv4$(EXEEXT): $(test_ipv4_OBJECTS) $(test_ipv4_DEPENDENCIES) 
	@rm -f test_ipv4$(EXEEXT)
	$(LINK) $(test_ipv4_OBJECTS) $(test_ipv4_LDADD) $(LIBS)
test_ipv4_options$(EXEEXT): $(test_ipv4_options_OBJECTS) $(test_ipv4_options_DEPENDENCIES) 
	@rm -f test_ipv4_options$(EXEEXT)
	$(LINK) $(test_ipv4_options_OBJECTS) $(test_ipv4_options_LDADD) $(LIBS)
test_ipv6_icmpv4$(EXEEXT): $(test_ipv6_icmpv4_OBJECTS) $(test_ipv6_icmpv4_DEPENDENCIES) 
	@rm -f test_ipv6_icmpv4$(EXEEXT)
	$(LINK) $(test_ipv6_icmpv4_OBJECTS) $(test_ipv6_icmpv4_LDADD) $(LIBS)
tftp$(EXEEXT): $(tftp_OBJECTS) $(tftp_DEPENDENCIES) 
	@rm -f tftp$(EXEEXT)
	$(LINK) $(tftp_OBJECTS) $(tftp_LDADD) $(LIBS)
tring_tcp1$(EXEEXT): $(tring_tcp1_OBJECTS) $(tring_tcp1_DEPENDENCIES) 
	@rm -f tring_tcp1$(EXEEXT)
	$(LINK) $(tring_tcp1_OBJECTS) $(tring_tcp1_LDADD) $(LIBS)
tring_tcp2$(EXEEXT): $(tring_tcp2_OBJECTS) $(tring_tcp2_DEPENDENCIES) 
	@rm -f tring_tcp2$(EXEEXT)
	$(LINK) $(tring_tcp2_OBJECTS) $(tring_tcp2_LDADD) $(LIBS)
udp1$(EXEEXT): $(udp1_OBJECTS) $(udp1_DEPENDENCIES) 
	@rm -f udp1$(EXEEXT)
	$(LINK) $(udp1_OBJECTS) $(udp1_LDADD) $(LIBS)
udp2$(EXEEXT): $(udp2_OBJECTS) $(udp2_DEPENDENCIES) 
	@rm -f udp2$(EXEEXT)
	$(LINK) $(udp2_OBJECTS) $(udp2_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-noinstPROGRAMS ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
